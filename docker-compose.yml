version: "3.8"

services:
    nginx:
        container_name: slim_nginx
        image: nginx:stable-alpine
        restart: always
        ports:
            - "8080:80"
        volumes:
            - .:/var/www/slim_app
            - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    php:
        container_name: slim_api
        build:
            context: ./docker/php
            dockerfile: ./Dockerfile
        env_file:
            - .env
        ports:
            - "9000:9000"
        volumes:
            - .:/var/www/slim_app
        depends_on:
            - nginx
            - swagger
    db:
        container_name: postgres
        restart: always
        image: postgres:15-alpine
        env_file:
            - .env
        ports:
            - "5432:5432"
        volumes:
            - postgres-data:/var/lib/postgresql/data
            - ./scripts/db_data_upload:/scripts/db_data_upload
            - ./scripts/db:/docker-entrypoint-initdb.d
        depends_on:
            - php
        healthcheck:
            test: ["CMD-SHELL", "sh -c 'pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}'"]
            interval: 10s
            timeout: 5s
            retries: 3
    composer:
        image: composer
        volumes:
            - .:/app
        working_dir: /app
        command: require zircote/swagger-php slim/slim:"4.*" slim/psr7:"dev-master"
    swagger:
        command: "public/index.php -o openapi.yaml"
        image: tico/swagger-php
        stdin_open: true
        tty: true
        volumes:
            - .:/var/www/slim_app
        working_dir: /var/www/slim_app
    swagger-ui:
        environment:
            SWAGGER_JSON: /foo/openapi.yaml
        image: swaggerapi/swagger-ui
        ports:
            - 8095:8080
        volumes:
            - .:/foo
    db-data-upload:
        container_name: db-data-upload
        command: ./db_data_upload.sh
        env_file:
            - .env
        build:
            context: ./docker/db-data-upload
            dockerfile: ./Dockerfile
        volumes:
            - ./scripts/db_data_upload:/var/www/data
        working_dir: /var/www/data
        depends_on:
            db:
                condition: service_healthy
volumes:
    postgres-data:
        driver: local
